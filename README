++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Projet Applications internet - Serveur d'auth 
Julien RIBY 
2A Info et Réseaux ENSEEIHT
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

------------------------------------------------------------------------------------
							TREE
------------------------------------------------------------------------------------
├── appcli1
│   ├── app.rb
│   ├── spec
│   │   ├── app_spec.rb
│   │   └── spec_helper.rb
│   └── views
│       ├── index.erb
│       └── protected.erb
├── appcli2
│   ├── app.rb
│   ├── spec
│   │   ├── app_spec.rb
│   │   └── spec_helper.rb
│   └── views
│       ├── index.erb
│       └── protected.erb
├── README
└── sauth
    ├── bdd
    │   ├── config
    │   │   └── database.yml
    │   ├── database.rb
    │   ├── db
    │   │   ├── development.sqlite3
    │   │   └── migrate
    │   │       ├── 001_create_users.rb
    │   │       ├── 002_add_login_passwd.rb
    │   │       ├── 003_create_applications.rb
    │   │       └── 004_create_utilisations.rb
    │   ├── migration.rb
    │   └── README.md
    ├── Gemfile
    ├── Gemfile.lock
    ├── lib
    │   ├── application.rb
    │   ├── user.rb
    │   └── utilisation.rb
    ├── log
    │   └── log_sessions.txt
    ├── sauth.rb
    ├── spec
    │   ├── application_spec.rb
    │   ├── sauth_spec.rb
    │   ├── spec_helper.rb
    │   ├── user_spec.rb
    │   └── utilisation_spec.rb
    └── views
        ├── applications
        │   └── new.erb
        ├── forbidden.erb
        ├── index.erb
        ├── notfound.erb
        ├── sauth
        │   └── admin.erb
        ├── sessions
        │   ├── appli.erb
        │   └── new.erb
        └── users
            ├── new.erb
            └── profil.erb

------------------------------------------------------------------------------------
Lancer les rspec du sauth et ses lib
------------------------------------------------------------------------------------
0. Avoir une bdd vide (la bdd sera dans le même état après les tests)
1. cd sauth
2. rspec spec/* --format documentation

Vous devez avoir :


Application
  init
    With good infos
      should be valid with a name, an url (http) and a user
      should be valid with a name, an url, a port, and a user
      should be valid with a name, an url with .fr, and a user
      should be valid with a name, an url (https) and a user
    With info missing
      should not be valid without a name
      should not be valid without an url
      should not be valid without a user_id
      should not be valid if the name is empty
      should not be valid if the url is empty
      should not be valid if the user_id is empty
    With bad info
      should not be valid with a bad url (http://.. ou https:// 
      should not be valid with a bad name (other char than a-z0-9_-) 
  Unicity
    should have a name unique
  Test of method delete
    Should delete appli and utilisations of appli
  Test of method application_is_present
    Should use find_by_name
    Should return true if the application is present
    Should not be valid if the application is not present
    Should not be valid if the application is not given

Authenticatin Service
  User registration
    get /users/new
      should get /users/new
      should return a form to post registration info to /users
    post /users
      should use create
      should redirect to /sessions/new
      Registration is not OK
        should render the registration form if the login is not set
        should render the registration form if the pass is not set
        should render the registration form if the login and the pass are not set
        should render the registration form if the login is already taken
  Connexion Service
    get /sessions/new
      should get /sessions/new
      should return a form to post registration info to /sessions
    post /sessions
      Should use user is present
      Should redirect to the user page if the log and pass is present
      Should set a session
      Connexion is not OK
        Should return the connexion form if user_is_present return false
    get /sessions/disconnect
      Should diconnect and redirect to /sessions/new
  Index and user pages
    get /
      should get /
      should return the index page
    get /users/:login
      with current_user
        should get /users
        should return the user page
      without good current_user
        should have error 403
      without current_user
        should have error 403
  App registration
    get /applications/new
      with current user
        should get /applications/new
        should return a form to post registration info to /applications
      without current user
        should have error 403
    post /applications
      Inscription app is OK
        should use create
        should redirect to /users/:login
      Inscription app is not OK
        should give /applications/new form if the name is not set
        should give /applications/new form if the url is not set
        should give /applications/new form if the name and the url are not set
        should give /applications/new form if the url is invalid
        should give /applications/new form if the name is invalid
        should give /applications/new form if the name is already taken
  Destroy app or user
    get /application/delete/:name
      with current user
        should use delete in @a and redirect to /users/log
        should have error 404 if the app doesn't exist
      without current user
        should have error 403
      without user admin of the app
        should have error 403
    delete /users/:login
      Without current user
        should have error 403
      With current user
        should delete the user if the curent user is admin
        should have error 404 if the user to del doesn't exist
        should have error 403 if the curent user is not admin
    Admin of the sauth
      should have error 403 if the current user is not the admin
      should have error 403 if there is no user
      get /sauth/admin
        should get /sauth/admin
        should return the admin page
  Connexion Service with app
    get /app1/sessions/new
      With good app
        should get /app1/sessions/new
        should return a form to post registration info to /app1/sessions
        With current user
          Should redirect to the app
          Should use utilisation is present and redirect to the app if utilisation is present return true
          Should use utilisation is present and create Utilisation if utilisation is present return false
        With bad info
          should return 404 if app1 doesn't exist
          should return 404 if origin is not set
    post /:appli/sessions
      Should use user is present
      Should use utilisation is present
      Should redirect to the app if the log and pass is present
      Should use utilisation is present and create Utilisation if utilisation is present return false
      Should set a session
      Utilisation is present return false
        Should redirect to the page if the log and pass is present
      User is present return false
        Should return the connexion form if user_is_present return false

User
  init
    With info not missing
      should be valid with a login a passwd
      With info missing
        should not be valid without a passwd
        should not be valid without a login
        should not be valid if the login is empty
        should not be valid if the passwd is empty
    Unicity
      should have a login unique
    Test passwd
      Should call the encryption sha1
      Should encrypt the pass
  Tests of methods
    Test of create
      User is valid
        Should create the user
      User is not valid
        Should not be valid if the login is empty
        Should not be valid if the pass is empty
        Should not be valid if the pass is nil
        Should not be valid if the login is nil
    Test of method user_is_present
      Should use find_by_login
      Should return true if the user is present
      Should not be valid if the user is not present
      Should not be valid if the user is not given
      Should not be valid if the pass is not given
      Should not be valid if the login and the pass is not given
  Test of method delete
    Should delete the user and all apps of the user

Utilisation
  With good infos
    should be valid with an application and a user
  With info missing
    should not be valid without an application
    should not be valid without a user
  Test de is_present
    Should return true if the utilisation is present
    will return false
      Should return false if the utilisation is not present
      Should not be valid if the user is not given
      Should not be valid if the application is not given
      Should not be valid if the login and the application is not given

Finished in 9.98 seconds
104 examples, 0 failures

------------------------------------------------------------------------------------
Lancer les rspec de app1
------------------------------------------------------------------------------------
1. cd appcli1/spec/
2. rspec app_spec.rb --format documentation

Vous devez avoir :

app
  get /
    should get /
    should return the index page
  get /protected
    Without session
      should redirect to the sauth
    Response of sauth
      should redirect to protected
      should set the session
    With session
      should get /protected
      should return the private page
    Bad secret
      should have the message Probleme avec le sauth !

------------------------------------------------------------------------------------
Lancer les rspec de app2
------------------------------------------------------------------------------------
1. cd appcli2/spec/
2. rspec app_spec.rb --format documentation

Vous devez avoir :

app
  get /
    should get /
    should return the index page
  get /protected
    Without session
      should redirect to the sauth
    Response of sauth
      should redirect to protected
      should set the session
    With session
      should get /protected
      should return the private page
    Bad secret
      should have the message Probleme avec le sauth !

------------------------------------------------------------------------------------
Lancer le sauth et les applis
------------------------------------------------------------------------------------

1. Modifier le fichier /etc/hosts et ajouter les lignes  (être en su)

127.0.1.1       sauth
127.0.1.1       app

2. Lancer les serveur

Terminal 1
1. cd sauth/
2. ruby sauth.rb 

----> Adresse du serveur d'auth : http://sauth:6666

Terminal 2
1. cd appcli1/
ruby app.rb

----> Adresse de l'app1 d'auth : http://app:6001

Terminal 3
1. cd appcli2/
ruby app.rb

----> Adresse de l'app2 d'auth : http://app:6002


------------------------------------------------------------------------------------
Tester le serveur sauth
------------------------------------------------------------------------------------

Note : A n'importe quel moment des test, vous pouvez aller voir l'etat de la bdd

////////////////
Inscription
////////////////

I. Ajout d'un utilisateur admin (L'utilisateur ayant le login admin sera l'admin du sauth, il pourra supprimer les users. Si un user est suppr toutes les appis et leurs utilisation par d'autres users seront suppr)

	1. Aller à http://sauth:6666
	2. Cliquer sur Inscription
	3. Entrer dans login : admin et dans pass : admin
	4. Cliquer sur Inscription -> Vous êtes rediriger vers la page de connexion
        ---> L'inscription est OK - vous êtes rediriger vers la page de connexion

II. Ajout d'un utilisateur user1

	1. Cliquer sur Inscription
        1.1 Vous pouvez tester les cas d'erreurs (cf note)
	2. Entrer dans login : user1 et dans pass : pass
	3. Cliquer sur Inscription -> Vous êtes rediriger vers la page de connexion
        ---> L'inscription est OK - vous êtes rediriger vers la page de connexion

       Note : Voici la gestion des cas d'erreurs : 
             1. Login ou passwd non entrée
             2. Login déja pris : entrer admin dans login

III. Ajout d'un utilisateur user2

	1. Cliquer sur Inscription
	2. Entrer dans login : user2 et dans pass : pass
	3. Cliquer sur Inscription -> Vous êtes rediriger vers la page de connexion
        ---> L'inscription est OK - vous êtes rediriger vers la page de connexion

IV. Ajout d'un utilisateur test

	1. Cliquer sur Inscription
	2. Entrer dans login : test et dans pass : pass
	3. Cliquer sur Inscription -> Vous êtes rediriger vers la page de connexion
        ---> L'inscription est OK - vous êtes rediriger vers la page de connexion


////////////////
Connexion
////////////////
        1. Vous êtes sur la page de connexion
        1.1 Vous pouvez tester les cas d'erreurs (cf note)
        2. Entrer dans login : user1 et dans pass : pass
        ---> La connexion est OK - vous êtes rediriger vers la page d'acceuil du sauth

       Note : Voici la gestion des cas d'erreurs : 
             1. Login ou passwd non entrée
             2. Le login ou le pass incorrect : entrer user3 dans login ou user2 dans login et badpass dans pass

////////////////
Profile du user1
////////////////
        0. Etre connecter sur le sauth (connexion)
        1. Cliquer sur Allez a votre profil  
        ---> Vous êtes sur le profil de user1

        Note : Aucune appli n'est inscrite pour user1 -> Allez on va en inscrire une petite

////////////////
inscription d'une appli
////////////////
        0. Etre sur la page de profile de user1
        1. Cliquer sur Inscrire une application 
        ---> Vous êtes sur le Portail d'inscription d'application
        2.2  Vous pouvez tester les cas d'erreurs (cf note)
        3. Entrer dans name : app1 et dans url : http://app:6001
        ---> L'application est crée - le user1 en est l'admin - il pourra la supprimer - Vous êtes redirigé sur le profil de user1


        Note : Voici la gestion des cas d'erreurs : 
             1. name ou url non entrée
             2. Url n'a pas la forme http(s)://......

////////////////
suppression d'une appli
////////////////
        0. Etre sur la page de profile de user1
        1. Inscrire une application (name : test, url : http://test)
        1.1 Vous pouvez tester les cas d'erreurs (cf note)
        ---> L'application est crée - le user1 en est l'admin - Vous êtes redirigé sur le profil de user1
        2. Cliquer sur effacer en face de test
        ---> L'application est supprimer - Vous restez sur le profil de user1 - Dans la table utilisation, les utilisation ac l'application st suppr

        Note : Voici la gestion des cas d'erreurs : 
             1. Lors de la création de test, entrer app1 dans name puis valider. 
                L'enregistrement n'est pas fait car app1 est déja utilisée

////////////////
Deconnexion
////////////////

        1. Cliquer sur deco
        ---> Vous êtes rediriger vers la page de connexion
        2. Profitez en Pour refaire la manipulation avec user2 et créer l'appli : name : app2, url : http://app:6002


////////////////
Admin du sauth - Suppr de user
////////////////
        1. Se connecter avec les log : login : admin, pass : admin
        ---> Vous êtes sur la page du grand maître du sauth
        1.1 Tel un user normal vous pouver créer, modifier et vour la liste des appli de admin via Allez a votre profil 
        2. Cliquer sur Go to admin user
        ---> Vous êtes sur la page admin- Vous avez la liste des user du sauth
        3. Cliquer sur Supprimer en face de test
        ---> Le user ainsi que toutes ces applis sont supprimer - Dans la table utilisation les utilisation ac le user st suppr
        ---> Vous restez sur la page admin

------------------------------------------------------------------------------------
Tester les applications
------------------------------------------------------------------------------------



////////////////
Redirection
////////////////
 
        0. être déconnecté du sauth
	1. Se connecter à l'appli cliente 1 : http://app:6001
        2. Allez à la page privée
        -----> Pas de cookie dans app1 donc vous êtes redirigé vers le sauth
        3. Se logger
        -----> Vous êtes redirigé vers l'appli

        Vous pouvez allez de la page privé à la page public sans être redirigé car il y a un cookie pour l'app 1

////////////////
Redirection transparente
////////////////
 
        0. être logguer sur sauth
	1. Se connecter à l'appli cliente 2 : http://app:6002
        2. Allez à la page privée
        -----> Pas de cookie dans app2 donc vous êtes redirigé vers le sauth mais étant déja connecté vous êtes redirigé sur l'app

	A noter qu'après ces deux manip, vous pouvez aller à la page de votre profil sur le sauth pour voir les apps 
        utilisées par votre compte

------------------------------------------------------------------------------------
Les plus
------------------------------------------------------------------------------------

	1. Expiration de session : votre session expire dans 1 jour
        2. Journalisation : Aller dans sauth/log/log_sessions.txt

------------------------------------------------------------------------------------
Secu
------------------------------------------------------------------------------------

1. Toutes les page qui necessite une auth ne sont pas accessibles sans être logguer même en les entrant en dur dans l'url (erreur 403)
2. Toutes les pages introuvables (go to profil avec user innexistant ou utiliser une app pas dans le sauth) retourne l'erreur 404


		ENJOY !!!
